blueprint:
  name: Doorbell Rang
  description: Actions to be taken when the doorbell is activated
  domain: automation
  author: EffortlessHome
  source_url: https://github.com/EffortlessHome/blueprints/raw/refs/heads/main/automation/EffortlessHome/eh_doorbell_rang.yaml
  input:
    sensor:
      name: Doorbell Rang Binary Sensor
      description: The sensor for the doorbell ringing
      selector:
        entity:
          domain:
          - binary_sensor
          multiple: false
    camera:
      name: Camera
      description: The doorbell camera which creates the snapshot
      selector:
        entity:
          domain:
          - camera
          multiple: false
    file_path:
      name: File Path
      description: The file path to store the most current snapshot. Defaults to **/media/snapshots/<camera_name>**
        - `/media/snapshots/{{ states[camera].object_id }}/last_doorbell.jpg`.
      default: /media/snapshots/{{ states[camera].object_id }}/last_doorbell.jpg
    delay:
      name: Snapshot Delay
      description: Wait before creating camera snapshot.
      default: 1
      selector:
        duration: {}
    notify:
      name: Notify Device
      description: Notify a device?
      default: true
      selector:
        boolean: {}
    condition:
      name: Add Condition(s) to send Snapshot
      description: Add conditions if needed to send snapshot to device
      default: []
      selector:
        condition: {}
    notify_device:
      name: Device to notify
      description: Select a device to send notifications to. Device needs to run the
        official Home Assistant app to receive notifications.
      selector:
        device:
          integration: mobile_app
          multiple: false
    notify_group:
      name: Notify a Group or Android TV (EXPERIMENTAL)
      description: "Enter the name of the group or individual TV for notifications.
        (example: all_devices) This will override individual device settings above.
        Device needs to run the official Home Assistant app to receive notifications.
        To notify multiple devices, create a [Notification Group](https://companion.home-assistant.io/docs/notifications/notifications-basic/#sending-notifications-to-multiple-devices).\n
        \n\nImportant: Groups containing both mobile devices and TVs won't display
        snapshots on the TV unless 'Android TV' is enabled. However, this setting
        prevents Android phones from receiving snapshots"
      default: ''
    notification_title:
      name: Notification title
      default: Doorbell Pressed
    notification_message:
      name: Notification message
      default: '{{ sensor_name }} doorbell was pressed. Snapshot from {{ camera_name
        }} at {{ time }}.'
    delay_notification:
      name: Notification Delay (Optional)
      description: Wait before sending another notification, in seconds. (ex. 5 minutes
        = 300 seconds)
      default: 60
      selector:
        number:
          min: 0.0
          max: 86400.0
          unit_of_measurement: seconds
          mode: box
          step: 1.0
    notification_group:
      name: Group
      description: The group name that will determine if notifications are grouped
        on your mobile device. (default = {{ camera_name }} Snapshot)
      default: '{{ camera_name }} Snapshot'
    data_clickaction_url:
      name: URL to Navigate (Optional)
      description: The URL to navigate to when clicking on the notification. (default
        = /lovelace)
      default: /lovelace
    save_archive_file:
      name: Save Archive Files?
      description: Choose to activate saving of old snapshots or not (default = on).
      default: true
      selector:
        boolean: {}
    conditionSave:
      name: Add Condition(s) to Archive Snapshot
      description: Add conditions if needed to save snapshot history files in a directory.
      default: []
      selector:
        condition: {}
    additional_actions_before:
      name: Additional Actions Before
      description: Add additional actions to the script. Will execute before everything
        else. Useful to turn on a light before the snapshot!
      default: []
      selector:
        action: {}
    additional_actions:
      name: Additional Actions After
      description: Add additional actions to the script. Will execute after everything
        else.
      default: []
      selector:
        action: {}
    action_type:
      name: Action Type (EXPERIMENTAL)
      description: 'Set action type, see [Actionable Notifications](https://companion.home-assistant.io/docs/notifications/actionable-notifications/).
        default: URI'
      default: URI
    action_title:
      name: Action Title (EXPERIMENTAL)
      description: Title of action that will appear with the notification
      default: Open Dashboard
    action_uri:
      name: Action URI (EXPERIMENTAL)
      description: 'URI to naviagte to. default: /lovelace'
      default: '{{ clickActionURL }}'
trigger:
- platform: state
  entity_id: !input sensor
  from: 'off'
  to: 'on'
variables:
  sensor: !input sensor
  sensor_name: '{{ states[sensor].name }}'
  camera: !input camera
  camera_name: '{{ states[camera].name }}'
  notify_device: !input notify_device
  time: '{{ now().strftime("%H:%M") }}'
  date: '{{ now().strftime("%Y-%m-%d") }}'
  notification_title: !input notification_title
  notification_message: !input notification_message
  file_path: !input file_path
  archive_file_path: /media/snapshots/{{ states[camera].object_id }}/archive/doorbell/{{
    now().strftime("%Y%m%d-%H%M%S") }}.jpg
  delay: !input delay
  delay_notification: !input delay_notification
  snapshot_create_file_path: !input file_path
  snapshot_access_file_path: '{{ snapshot_create_file_path | replace(''/media'',''/media/local'')
    }}'
  condition: !input condition
  conditionSave: !input conditionSave
  clickActionURL: !input data_clickaction_url
  save_archive_file: !input save_archive_file
  additional_actions: !input additional_actions
  additional_actions_before: !input additional_actions_before
  notify: !input notify
  notification_group: !input notification_group
  action_type: !input action_type
  action_title: !input action_title
  action_uri: !input action_uri
action:
- choose: []
  default: !input additional_actions_before
- delay: !input delay
- service: camera.snapshot
  entity_id: !input camera
  data:
    filename: !input file_path
- if:
  - condition: template
    value_template: !input notify
  then:
  - if:
    - condition: !input condition
    then:
    - if:
      - condition: template
        value_template: '{{ not this.attributes.last_triggered or (now() - this.attributes.last_triggered).seconds
          > delay_notification }}'
      then:
      - choose:
        - conditions: '{{ not notify_group_target }}'
          sequence:
          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: !input notification_title
            message: !input notification_message
            data:
              image: '{{ snapshot_access_file_path }}'
              clickAction: !input data_clickaction_url
              ttl: 0
              priority: high
              attachment:
                url: '{{ snapshot_access_file_path }}'
                content_type: JPEG
              url: !input data_clickaction_url
              actions:
              - action: '{{ action_type }}'
                title: '{{ action_title }}'
                uri: '{{ action_uri }}'
        default:
        - service: notify.{{ notify_group_target }}
          data:
            title: !input notification_title
            message: !input notification_message
            data:
              image: '{{ snapshot_access_file_path }}'
              clickAction: !input data_clickaction_url
              ttl: 0
              priority: high
              attachment:
                url: '{{ snapshot_access_file_path }}'
                content_type: JPEG
              url: !input data_clickaction_url
              actions:
              - action: '{{ action_type }}'
                title: '{{ action_title }}'
                uri: '{{ action_uri }}'
- if:
  - condition: template
    value_template: !input save_archive_file
  then:
  - if:
    - condition: !input conditionSave
    then:
    - service: camera.snapshot
      entity_id: !input camera
      data:
        filename: '{{ archive_file_path }}'
- choose: []
  default: !input additional_actions
mode: parallel
